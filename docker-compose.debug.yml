version: "3.3"

services:
  graphql:
    image: node:18.19.1
    container_name: ezunpaywall-graphql-dev
    environment:
      - NODE_ENV
      # elastic
      - ELASTICSEARCH_NODES
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      - ELASTICSEARCH_INDEX_ALIAS
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
    working_dir: /usr/src/app
    volumes:
      - ./services/graphql:/usr/src/app
    command: "npm run dev"
    ports:
      - ${GRAPHQL_PORT:-59701}:3000
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -Y off --no-verbose --tries=1 --spider http://localhost:3000/healthcheck || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  enrich:
    image: node:18.19.1
    container_name: ezunpaywall-enrich-dev
    environment:
      - NODE_ENV
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # graphql
      - GRAPHQL_URL=http://graphql:3000
    working_dir: /usr/src/app
    volumes:
      - ./services/enrich:/usr/src/app
    command: "npm run dev"
    ports:
      - ${ENRICH_PORT:-59702}:3000
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -Y off --no-verbose --tries=1 --spider http://localhost:3000/healthcheck || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 5
  
  admin:
    image: node:18.19.1
    container_name: ezunpaywall-admin-dev
    environment:
      - NODE_ENV
      - LOG_LEVEL=debug
      # smtp
      - SMTP_HOST=maildev
      - SMTP_PORT
      # mail
      - NOTIFICATIONS_SENDER
      - NOTIFICATIONS_RECEIVERS
      - NOTIFICATIONS_MACHINE
      # unpaywall
      - UNPAYWALL_APIKEY
      - UNPAYWALL_URL
      # elastic
      - ELASTICSEARCH_NODES
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      - ELASTICSEARCH_INDEX_ALIAS
      - ELASTICSEARCH_TIMEOUT
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # cron snapshot
      - CRON_DOWNLOAD_SNAPSHOT_SCHEDULE
      - CRON_DOWNLOAD_SNAPSHOT_ACTIVE
      - CRON_DOWNLOAD_SNAPSHOT_INDEX
      # cron date update
      - CRON_DATA_UPDATE_SCHEDULE
      - CRON_DATA_UPDATE_ACTIVE
      - CRON_DATA_UPDATE_INDEX
      - CRON_DATA_UPDATE_INTERVAL
      # cron date update history
      - CRON_DATA_UPDATE_HISTORY_SCHEDULE
      - CRON_DATA_UPDATE_HISTORY_ACTIVE
      - CRON_DATA_UPDATE_HISTORY_INDEX
      - CRON_DATA_UPDATE_HISTORY_INDEX_HISTORY
      - CRON_DATA_UPDATE_HISTORY_INTERVAL
      # cron clean file
      - CRON_CLEAN_FILE_SCHEDULE
      - CRON_CLEAN_FILE_CHANGEFILE_THRESHOLD
      - CRON_CLEAN_FILE_REPORT_THRESHOLD
      - CRON_CLEAN_FILE_SNAPSHOT_THRESHOLD
      # password
      - ADMIN_APIKEY
      # health
      - HEALTH_TIMEOUT
    working_dir: /usr/src/app
    volumes:
      - ./services/admin:/usr/src/app
    command: "npm run dev"
    ports:
      - ${ADMIN_PORT:-59703}:3000
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -Y off --no-verbose --tries=1 --spider http://localhost:3000/healthcheck || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  frontend:
    image: node:18.19.1
    container_name: ezunpaywall-frontend-dev
    working_dir: /usr/src/app
    volumes:
      - ./services/frontend:/usr/src/app
    command: "npm run dev"
    ports:
      - ${FRONTEND_PORT:-59706}:3000
      - 24678:24678
    environment:
      - NODE_ENV
      - NUXT_PUBLIC_ENVIRONMENT
      - NUXT_PUBLIC_ELASTIC_ENV=development
      - NUXT_PUBLIC_VERSION=development
      - NUXT_PUBLIC_UNPAYWALL_HOMEPAGE_URL
      - NUXT_PUBLIC_UNPAYWALL_API_URL
      - NUXT_PUBLIC_UNPAYWALL_URL
      - NUXT_PUBLIC_GRAPHQL_URL
      - NUXT_PUBLIC_ENRICH_URL
      - NUXT_PUBLIC_ADMIN_URL
      - NUXT_ADMIN_URL
      - NUXT_ADMIN_APIKEY
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -Y off --no-verbose --tries=1 --spider http://localhost:3000 || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.2.4
    container_name: ezunpaywall-redis-dev
    command: redis-server --requirepass "${REDIS_PASSWORD:-changeme}"
    volumes:
      - ${REDIS_DATA_PATH:-./data/redis}:/data
    ports:
      - ${REDIS_PORT:-6379}:6379
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "redis-cli --pass changeme ping | grep PONG"
        ]
      interval: 10s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:1.27.2
    container_name: ezunpaywall-nginx-dev
    environment:
      # host of service
      - NGINX_HOST=localhost
      - FRONTEND_URL=http://frontend:3000/
      - GRAPHQL_URL=http://graphql:3000/
      - ENRICH_URL=http://enrich:3000/
      - ADMIN_URL=http://admin:3000/
    ports:
      - ${NGINX_PORT:-80}:80
    volumes:
      - ./services/nginx/templates/dev.conf.template:/etc/nginx/templates/default.conf.template:ro
    restart: unless-stopped
    depends_on:
      enrich:
        condition: service_healthy
      admin:
        condition: service_healthy
      graphql:
        condition: service_healthy
      frontend:
        condition: service_healthy
    healthcheck:
      test: [
        "CMD-SHELL",
        "service nginx status || exit 1" 
      ]
      interval: 10s
      timeout: 10s
      retries: 5

  fakeunpaywall:
    container_name: ezunpaywall-fakeunpaywall-dev
    image: node:18.19.1
    working_dir: /usr/src/app
    volumes:
      - ./services/fakeUnpaywall:/usr/src/app
    command: "npm run dev"
    ports:
      - 59799:3000
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -Y off --no-verbose --tries=1 --spider http://localhost:3000 || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: ezunpaywall-elastic-dev
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ES_JAVA_OPTS=-Xms4g -Xmx4g
      - ELASTIC_USERNAME={ELASTICSEARCH_USERNAME:-elastic}
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
    volumes:
      - "./data/elastic:/usr/share/elasticsearch/data"
    ports:
      - 9200:9200
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --fail http://elastic:changeme@localhost:9200"
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: ezunpaywall-kibana-dev
    environment:
      - ELASTICSEARCH_HOSTS="http://elastic:9200"
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
      - xpack.security.enabled=true
    depends_on:
      elastic:
        condition: service_healthy
    ports:
      - 5601:5601
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --fail http://elastic:changeme@localhost:5601/api/status"
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  maildev:
    image: djfarrelly/maildev
    container_name: ezunpaywall-maildev-dev
    ports:
      - 1080:80
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -Y off --no-verbose --tries=1 --spider http://localhost:80 || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 5
