version: "3.3"

services:
  graphql:
    image: node:14.15.5
    container_name: graphql-dev
    environment:
      - NODE_ENV=development
      # elastic
      - ELASTICSEARCH_HOST=http://elastic
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - ELASTICSEARCH_INDEX_ALIAS=upw
      # proxy
      - http_proxy
      - https_proxy
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # log
      - GRAPHQL_LOG_PATH
      - GRAPHQL_ACCESS_LOG_PATH
    working_dir: /graphql
    volumes:
      - ./src/graphql:/graphql
      - ${GRAPHQL_APPLICATION_LOG_PATH:-./src/graphql/log/application}:/graphql/log/application
      - ${GRAPHQL_ACCESS_LOG_PATH:-./src/graphql/log/access}:/graphql/log/access
    command: "npm run dev"
    ports:
      - 3000:3000
    depends_on:
      - redis
    restart: unless-stopped

  update:
    image: node:14.15.5
    container_name: update-dev
    environment:
      - NODE_ENV=development
      # mail
      - NODE_CONFIG
      - EZUNPAYWALL_SMTP_HOST=maildev
      - EZUNPAYWALL_SMTP_PORT
      - EZUNPAYWALL_NOTIFICATIONS_SENDER
      - EZUNPAYWALL_NOTIFICATIONS_RECEIVERS
      - EZUNPAYWALL_NOTIFICATIONS_MACHINE
      # unpaywall
      - UNPAYWALL_APIKEY
      - UNPAYWALL_URL
      # elastic
      - ELASTICSEARCH_HOST
      - ELASTICSEARCH_PORT
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      - ELASTICSEARCH_INDEX_ALIAS
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # proxy
      - http_proxy
      - https_proxy
      # log
      - UPDATE_LOG_PATH
      - UPDATE_ACCESS_LOG_PATH
    working_dir: /update
    volumes:
      - ./src/update:/update
      - ${UPDATE_APPLICATION_LOG_PATH:-./src/update/log/application}:/update/log/application
      - ${UPDATE_ACCESS_LOG_PATH:-./src/update/log/access}:/update/log/access
      - ${UPDATE_DATA_PATH:-./src/update/data}:/update/data
    command: "npm run dev"
    ports:
      - 4000:4000
    depends_on:
      - redis
    restart: unless-stopped

  enrich:
    image: node:14.15.5
    container_name: enrich-dev
    environment:
      - NODE_ENV=development
      # proxy
      - http_proxy
      - https_proxy
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # graphql
      - GRAPHQL_URL=http://graphql:3000
      # log
      - ENRICH_LOG_PATH
      - ENRICH_ACCESS_LOG_PATH
    working_dir: /enrich
    volumes:
      - ./src/enrich:/enrich
      - ${ENRICH_APPLICATION_LOG_PATH:-./src/enrich/log/application}:/enrich/log/application
      - ${ENRICH_ACCESS_LOG_PATH:-./src/enrich/log/access}:/enrich/log/access
      - ${ENRICH_DATA_PATH:-./src/enrich/data}:/enrich/data
    command: "npm run dev"
    ports:
      - 5000:5000
    depends_on:
      - redis
    restart: unless-stopped

  apikey:
    image: node:14.15.5
    container_name: apikey-dev
    environment:
      - NODE_ENV=development
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # log
      - APIKEY_LOG_PATH
    working_dir: /apikey
    volumes:
      - ./src/apikey:/apikey
      - ${APIKEY_APPLICATION_LOG_PATH:-./src/apikey/log/application}:/apikey/log/application
    command: "npm run dev"
    ports:
      - 7000:7000
    depends_on:
      - redis
    restart: unless-stopped

  mail:
    image: node:14.15.5
    container_name: mail-dev
    environment:
      # mail
      - NODE_CONFIG
      - EZUNPAYWALL_SMTP_HOST=maildev
      - EZUNPAYWALL_SMTP_PORT
      - EZUNPAYWALL_NOTIFICATIONS_SENDER
      - EZUNPAYWALL_NOTIFICATIONS_RECEIVERS
      - EZUNPAYWALL_NOTIFICATIONS_MACHINE
      # log
      - MAIL_LOG_PATH
    working_dir: /mail
    volumes:
      - ./src/mail:/mail
      - ${MAIL_APPLICATION_LOG_PATH:-./src/mail/log/application}:/mail/log/application
    command: "npm run dev"
    ports:
      - 8000:8000
    restart: unless-stopped

  frontend:
    image: node:14.15.5
    container_name: frontend-dev
    working_dir: /frontend
    volumes:
      - ./src/frontend:/frontend
    command: "npm run dev"
    ports:
      - 8080:8080
    environment:
      # graphql
      - GRAPHQL_URL
      # update
      - UPDATE_URL
      # enrich
      - ENRICH_URL
      # mail
      - MAIL_URL
      - EZUNPAYWALL_MAIL_APIKEY
      # frontend
      - HOST=0.0.0.0
      - PORT=8080

  redis:
    image: redis:6.2.5
    container_name: redis-dev
    command: redis-server --save 60 1 --requirepass changeme
    volumes:
      - ${REDIS_DATA_PATH:-./data/redis}:/data
    ports:
      - 6379:6379
    restart: unless-stopped

  fakeunpaywall:
    container_name: fakeunpaywall-dev
    image: node:14.15.5
    environment:
      - http_proxy
      - https_proxy
    working_dir: /fakeUnpaywall
    volumes:
      - ./src/fakeUnpaywall:/fakeUnpaywall
    command: "npm run dev"
    ports:
      - 12000:12000
    restart: unless-stopped

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elastic-dev
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=changeme
    healthcheck:
      test: curl --cacert $CERTS_DIR_ES/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./data/elastic:/usr/share/elasticsearch/data"
    ports:
      - 9200:9200
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana-dev
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS="http://elastic:9200"
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - xpack.security.enabled=true
    depends_on: 
      - elastic
    restart: unless-stopped

  nginx:
    image: nginx:1.20.1
    container_name: nginx-dev
    ports:
      - 80:80
    environment:
      - NGINX_HOST
    volumes:
      - "./src/nginx/templates/dev.conf.template:/etc/nginx/templates/default.conf.template:ro"
    restart: unless-stopped
    depends_on:
      - enrich
      - update
      - graphql
      - apikey
      - frontend

  maildev:
    image: djfarrelly/maildev
    container_name: maildev
    ports:
      - 1080:80

