const { paths, cron } = require('config');

const appLogger = require('../lib/logger/appLogger');
const Cron = require('./cron');

const { deleteFilesInDir } = require('../lib/files');

const cronConfig = cron.cleanFile;

let { active } = cronConfig;
if (active === 'true' || active) active = true;
else active = false;

/**
 * Removes files generated by an update process that are older than 30 days.
 *
 * @returns {Promise<void>}
 */
async function task() {
  appLogger.info('[cron][Clean file]: Has start');

  // Logs
  const accessLogFiles = await deleteFilesInDir(
    paths.log.accessDir,
    cronConfig.accessLogThreshold,
  );
  appLogger.info(`[cron][Clean file]: ${accessLogFiles?.join(',')} (${accessLogFiles.length}) access log file are deleted`);

  const applicationLogFile = await deleteFilesInDir(
    paths.log.applicationDir,
    cronConfig.applicationLogThreshold,
  );
  appLogger.info(`[cron][Clean file]: ${applicationLogFile?.join(',')} (${applicationLogFile.length}) application log file are deleted`);

  const healthcheckLogFile = await deleteFilesInDir(
    paths.log.healthcheckDir,
    cronConfig.healthcheckLogThreshold,
  );
  appLogger.info(`[cron][Clean file]: ${healthcheckLogFile?.join(',')} (${healthcheckLogFile.length}) healthcheck log file are deleted`);

  appLogger.info('[cron][Clean file]: Has finished');
}

const deleteFileCron = new Cron('Clean file', cronConfig.schedule, task, active);

module.exports = deleteFileCron;
