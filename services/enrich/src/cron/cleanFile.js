const { paths, cron } = require('config');

const Cron = require('../models/cron');
const logger = require('../lib/logger/appLogger');

const { deleteFilesInDir } = require('../lib/file');

const cronConfig = cron.cleanFile;

let { active } = cronConfig;
if (active === 'true' || active) active = true;
else active = false;

/**
 * Removes files generated by an enrichment that are older than one day.
 *
 * @returns {Promise<void>}
 */
async function task() {
  const deletedEnrichedFiles = await
  deleteFilesInDir(paths.data.enrichedDir, cronConfig.enrichedFileThreshold);
  logger.info(`[cron][files]: ${deletedEnrichedFiles?.join(',')} (${deletedEnrichedFiles.length}) enriched files are deleted`);

  const deletedStatesFiles = await
  deleteFilesInDir(paths.data.statesDir, cronConfig.stateFileThreshold);
  logger.info(`[cron][files]: ${deletedStatesFiles?.join(',')} (${deletedStatesFiles.length}) states files are deleted`);

  const deletedUploadedFiles = await
  deleteFilesInDir(paths.data.uploadDir, cronConfig.uploadedFileThreshold);
  logger.info(`[cron][files]: ${deletedUploadedFiles?.join(',')} (${deletedUploadedFiles.length}) uploaded files are deleted`);
}

/**
 * Cron that runs every day to delete files generated by an enrichment that are older than one day.
 */

const deleteFileCron = new Cron('Clean file', cronConfig.schedule, task, active);

module.exports = deleteFileCron;
