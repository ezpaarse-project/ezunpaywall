{
  "home": {
    "title" : "What is ezUnpaywall?",
    "general1": "ezUnpaywall is a mirror of <a href=\"{url}\" target=\"_blank\">Unpaywall</a> hosted at Inist-CNRS and developed by ezTEAM.",
    "general2": "It has an interface for enriching files with Open Access data from the DOI and a demonstrator for querying DOIs with GraphQL requests. ",
    "general3": "This server has an API that can be queried via an APIKey. You can get an APIKey on request to the team (see the contact section). For more information, see the <a href=\"{blogURL}\" target=\"_blank\">blog post</a>.",
    "metrics": "Metrics {env}",
    "globalMetrics": "Global metrics",
    "referencedResources": "Referenced resources",
    "openAccess": "Open Access",
    "openAccessStatus": "Open Access Status",
    "referencedRessourceHelp": "Number of bibliographic references recorded in the mirror",
    "openAccessHelp": "Number of bibliographic references available for free access  </br> (is_oa: true)",
    "goldOAHelp": "Number of bibliographic references with 'gold' status </br> (oa_status: 'gold')",
    "hybridOAHelp": "Number of bibliographic references with 'hybrid' status </br> (oa_status: 'hybrid')",
    "bronzeOAHelp": "Number of bibliographic references with 'bronze' status </br> (oa_status: 'bronze')",
    "greenOAHelp": "Number of bibliographic references with 'green' status </br> (oa_status: 'green')",
    "closedOAHelp": "Number of bibliographic references with 'closed' status  </br> (oa_status: 'closed')"
  },
  "contact": {
    "contactUs": "Contact us",
    "email": "Email address",
    "subject": "Subject",
    "content": "Message content",
    "sendNavigatorVersion": "Send my browser version",
    "emailSent": "Your contact request has just been sent to the team.",
    "failed": "Sending the contact form failed.",
    "requestInformation": "Information request",
    "bugReport": "Bug report",
    "requestApikey": "Request an API key",
    "emailIsRequired": "The email address is required",
    "emailMustBeValid": "The email address must be valid",
    "contentIsRequired": "A message is required",
    "subjectIsRequired": "Subject is required"
  },
  "enrich": {
    "general": "This page allows you to test the enrichment function of jsonl and csv files with unpaywall attributes.",
    "enrichFile": "Enrich your file",
    "filesSelection": "Select files",
    "settings": "Settings",
    "enrich": "Enrich",
    "authorizedFile": "Allowed types of file :",
    "continue": "Continue",
    "explainationLogs": "Files you want to be enriched by ezUnpaywall. The only condition is that they contain a DOI field.",
    "explainationTestsLogs": "Need files to test this service? We provide some on <a href=\"{url}\" target=\"_blank\">GitHub</a>.",
    "apiKey": "API Key",
    "fileExtension": "File extension recognized :",
    "unpaywallAttributes": "Unpaywall attributes",
    "startProcess": "Start enrichment",
    "stepUpload": "Sending the current file",
    "stepEnrich": "Enrichment in progress",
    "download": "Download the enriched file",
    "end": "Enrichment complete",
    "readLines": "Read lines",
    "enrichedLines": "Enriched lines",
    "duration": "Processing time (in seconds)",
    "error": "An error occured",
    "errorManyFile": "The number of files allowed is 1",
    "errorUploadFile": "only .csv and. jsonl files are allowed",
    "errorUpload": "Cannot upload file",
    "errorEnrich": "Cannot enrich file",
    "errorState": "Cannot get state of enrichment"
  },
  "graphql": {
    "title": "Graphql",
    "general1": "This GraphQL demonstrator allows you to build an API query.",
    "general2": "You just need to specify the DOI or DOIs seperated by a comma, your API key and the desired Unpaywall fields as output.",
    "general3": "The demonstrator builds the request and you can send the request to the server and see the answer. Use the help in the interface to get more information about the use of the form data.",
    "general4": "If you are a developer, you can also use the documentation section (swagger) to test the different API routes.",
    "constructor": "Graphql Demostrator",
    "apiKey": "API key",
    "settings": "Unpaywall attributes to retrieve",
    "request": "GraphQL request",
    "start": "Launch request",
    "result": "Result",
    "linkAPI": "See on the API",
    "copyRequest": "Copy GraphQL request",
    "copyResult": "Copy result",
    "errorRequest": "Cannot do GraphQL request",
    "errorCopyRequest": "Error while saving GraphQL request",
    "errorCopyResult": "Error while to saving response"
  },
  "administration": {
    "title": "Administration",
    "loginForm": "Login form",
    "login": "Login",
    "logout": "Logout",
    "loginSuccess": "Successful connection",
    "errorLogin": "Incorrect password",
    "password": "Password",
    "health": {
      "title": "Services status",
      "noHealth": "No service status",
      "errorHealth": "Cannot get healths"
    },
    "apikey": {
      "title": "API keys",
      "noApikeys": "no API keys",
      "name": "Name",
      "owner": "Owner: {owner}",
      "description": "Description: {description}",
      "createdAt": "Created at {date}",
      "access": "Access:",
      "attributes": "Unpaywall Attributes:",
      "allowed": "Allowed",
      "notAllowed": "Not Allowed",
      "import": "Import API keys in JSON format",
      "export": "Export API keys in JSON format",
      "infoImported": "API keys have been successfully imported",
      "errorImported": "Cannot import API keys",
      "copyAPIkey": "API keys have been copied",
      "errorCopyAPIkey": "Cannot copy API keys",
      "create": "Creation of a new API key",
      "infoCreated": "The API key has been created",
      "errorCreate": "The API key could not be created",
      "update": "Update API key",
      "infoUpdate": "The API key has been updated",
      "errorUpdate": "The API key could not be updated",
      "delete": "Deleting the API key",
      "deleteMessage": "Are you sure you want to delete this API key (irreversible action)",
      "infoDeleted": "The API key has been deleted",
      "errorDelete": "Cannot delete apikey"
    },
    "update" : {
      "title": "Launch an update",
      "infoUpdate": "The update process has started",
      "errorUpdate": "Cannot start update process",
      "future": "The date is after today",
      "interval": "Interval",
      "startDate": "Start date",
      "endDate": "End date"
    }
  },
  "unpaywallArgs": {
    "title": "Settings",
    "help": "In this part you can select the unpaywall attributes you want to retrieve. For more information, you can watch the <a href=\"{url}\" target=\"_blank\">unpaywall data format</a>",
    "selectAll": "Select all",
    "unselectAll": "Unselect all",
    "general": {
      "doi": "Digital Object Identifier",
      "data_standard": "Data collection approaches used for this resource",
      "doi_url": "DOI in hyperlink form",
      "genre": "Type of resource",
      "is_oa": "Is there an OA copy of this resource",
      "is_paratext": "Is the item an ancillary part of a journal, like a table of contents",
      "journal_is_in_doaj": "Is this resource published in a DOAJ-indexed journal",
      "journal_is_oa": "Is this resource published in a completely OA journal",
      "journal_issn_l": "A single ISSN for the journal publishing this resource",
      "journal_issns": "Any ISSNs assigned to the journal publishing this resource",
      "journal_name": "Name of the journal publishing this resource",
      "oa_status": "OA status, or color, of this resource",
      "published_date": "Date this resource was published",
      "publisher": "Name of this resource's publisher",
      "title": "Title of this resource",
      "updated": "Time when the data for this resource was last updated",
      "year": "Year this resource was published"
    },
    "oa_locations": {
      "evidence": "How unpaywall found this OA location",
      "host_type": "Type of host that serves this OA location",
      "is_best": "Is this location the best_oa_location for its resource",
      "license": "License under which this copy is published",
      "pmh_id": "OAI-PMH endpoint where we found this location",
      "updated": "Time when the data for this location was last updated",
      "url": "The url_for_pdf if there is one; otherwise landing page URL",
      "url_for_landing_page": "URL for a landing page describing this OA copy",
      "url_for_pdf": "URL with a PDF version of this OA copy",
      "version": "Content version accessible at this location"
    },
    "z_authors": {
      "family": "Family name",
      "given": "Given name",
      "ORCID": "URL-form of an ORCID identifier",
      "authenticated-orcid": "If true, record owner asserts that the ORCID user completed ORCID OAuth authentication"
    }
  },
  "fileSelector": {
    "filename": "Filename",
    "size": "Size",
    "clickToAdd": "Click or Drop to add",
    "removeList": "Delete list",
    "selectedFiles": "Selected files",
    "total": "Total"
  },
  "status": {
    "inUpdate": "Update in progress",
    "noInUpdate": "The data is up to date",
    "errorState": "Cannot get state of enrichment",
    "errorStatus": "Cannot get state of enrichment"
  },
  "state": {
    "createdAt": "Created at",
    "tasks": "Tasks",
    "task": "Task",
    "took": "Took",
    "percent": "Percent",
    "file": "File",
    "linesRead": "Lines read",
    "status": "Status"
  },
  "header": {
    "help": "The unpaywall mirror data is updated daily at 12:30 p.m."
  },
  "drawer": {
    "home": "Home",
    "enrich": "File enrichment",
    "graphql": "Graphql demonstrator",
    "updateHistory": "Update history",
    "openapi": "Documentation",
    "language": "Language",
    "contact": "Contact us",
    "administration": "Administration"
  },
  "reportHistory": {
    "title": "Last updates",
    "reloadReports": "Reload reports",
    "source": "The update files come from unpaywall.org",
    "goTo": "See the registry",
    "noReport": "No report availables",
    "reportsError": "Cannot get update reports",
    "reportError": "Cannot get update report",
    "insertedDocs": "new Lines",
    "updatedDocs": "updated Lines"
  },
  "theme": {
    "dark": "Dark theme",
    "light": "Light theme"
  },
  "download": "Download",
  "copy": "Copy",
  "send": "Send",
  "create": "Create",
  "createdAt": "Created at",
  "required": "Required",
  "cancel": "Cancel",
  "update": "Update",
  "close": "Close",
  "yes": "Yes",
  "no": "No",
  "detail": "Detail",
  "development": "development",
  "integration": "integration"
}
