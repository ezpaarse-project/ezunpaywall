version: "3.3"

services:
  graphql:
    build:
      context: ./src/graphql
    container_name: ezunpaywall-graphql-prod
    environment:
      - NODE_ENV=production
      # elastic
      - ELASTICSEARCH_HOSTS
      - ELASTICSEARCH_PORT
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      - ELASTICSEARCH_INDEX_ALIAS
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
    volumes:
      - ${GRAPHQL_APPLICATION_LOG_PATH:-./src/graphql/log/application}:/graphql/log/application
      - ${GRAPHQL_ACCESS_LOG_PATH:-./src/graphql/log/access}:/graphql/log/access
      - ${ELASTIC_CERT_CA_PATH:-./src/graphql/certs/ca.crt}:/graphql/certs
    command: "npm start"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  update:
    build:
      context: ./src/update
      args:
        - http_proxy
        - https_proxy
    container_name: ezunpaywall-update-prod
    environment:
      - NODE_ENV=production
      # proxy
      - http_proxy
      - https_proxy
      # unpaywall
      - UNPAYWALL_APIKEY
      - UNPAYWALL_HOST=http://api.unpaywall.org
      # elastic
      - ELASTICSEARCH_HOSTS
      - ELASTICSEARCH_PORT
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      - ELASTICSEARCH_INDEX_ALIAS
      # cron
      - UPDATE_CRON_SCHEDULE
      - UPDATE_CRON_ACTIVE
      - UPDATE_CRON_INDEX
      - UPDATE_CRON_INTERVAL
      # password
      - UPDATE_APIKEY
    volumes:
      - ${UPDATE_APPLICATION_LOG_PATH:-./src/update/log/application}:/update/log/application
      - ${UPDATE_ACCESS_LOG_PATH:-./src/update/log/access}:/update/log/access
      - ${UPDATE_DATA_PATH:-./src/update/data}:/update/data
      - ${ELASTIC_CERT_CA_PATH-./src/update/certs/ca.crt}:/update/certs
    command: "npm start"
    restart: unless-stopped

  enrich:
    build:
      context: ./src/enrich
    container_name: ezunpaywall-enrich-prod
    environment:
      - NODE_ENV=production
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # graphql
      - GRAPHQL_HOST
      - GRAPHQL_PORT
    volumes:
      - ${ENRICH_APPLICATION_LOG_PATH:-./src/enrich/log/application}:/enrich/log/application
      - ${ENRICH_ACCESS_LOG_PATH:-./src/enrich/log/access}:/enrich/log/access
      - ${ENRICH_DATA_PATH:-./src/enrich/data}:/enrich/data
    command: "npm start"
    depends_on:
      redis:
        condition: service_healthy
      elastic:
        condition: service_healthy
    restart: unless-stopped

  apikey:
    build:
      context: ./src/apikey
    container_name: ezunpaywall-apikey-prod
    environment:
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
    volumes:
      - ${APIKEY_APPLICATION_LOG_PATH:-./src/apikey/log/application}:/apikey/log/application
      - ${APIKEY_ACCESS_LOG_PATH:-./src/apikey/log/access}:/apikey/log/access
    command: "npm start"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    
  mail:
    build:
      context: ./src/mail
    container_name: ezunpaywall-mail-prod
    environment:
      # mail
      - NODE_CONFIG
      - MAIL_SMTP_HOST
      - MAIL_SMTP_PORT
      - MAIL_NOTIFICATIONS_SENDER
      - MAIL_NOTIFICATIONS_RECEIVERS
      - MAIL_NOTIFICATIONS_MACHINE
      # password
      - MAIL_APIKEY
    volumes:
      - ${MAIL_APPLICATION_LOG_PATH:-./src/mail/log/application}:/mail/log/application
      - ${MAIL_ACCESS_LOG_PATH:-./src/mail/log/access}:/mail/log/access
    command: "npm start"
    restart: unless-stopped

  frontend:
    build:
      context: ./src/frontend
    container_name: ezunpaywall-frontend-prod
    command: "npm run start"
    ports:
     - ${FRONTEND_PORT:-59706}:3000
    environment:
      - NODE_ENV=production
      # host of service
      - GRAPHQL_HOST
      - UPDATE_HOST
      - ENRICH_HOST
      - MAIL_HOST
      - MAIL_APIKEY

  redis:
    image: redis:6.2.5-alpine3.14
    container_name: ezunpaywall-redis-prod
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - ${REDIS_DATA_PATH:-./data/redis}:/data
    restart: unless-stopped

  health:
    build:
      context: ./src/health
    container_name: ezunpaywall-health-prod
    command: "npm run start"
    ports:
     - ${HEALTH_PORT:-59707}:3000
    restart: unless-stopped
    depends_on:
      enrich:
        condition: service_healthy
      update:
        condition: service_healthy
      graphql:
        condition: service_healthy
      apikey:
        condition: service_healthy
      frontend:
        condition: service_healthy
      redis:
        condition: service_healthy
      elastic:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -q -S -O - http://localhost:3000 2>&1 | grep 'HTTP/1.1 200 OK'" ]
      interval: 10s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:1.20.1-alpine
    container_name: ezunpaywall-nginx-prod
    ports:
      - ${NGINX_PORT:-80}:80
    environment:
      - NGINX_HOST
    volumes:
      - ${NGINX_CONFIG_PATH:-./src/nginx/templates/http.conf.template}:/etc/nginx/templates/default.conf.template:ro
      - ${NGINX_ACCESS_LOG_PATH:-./src/nginx/log}:/var/log/nginx
    restart: unless-stopped
    depends_on:
      enrich:
        condition: service_healthy
      update:
        condition: service_healthy
      graphql:
        condition: service_healthy
      apikey:
        condition: service_healthy
      mail:
        condition: service_healthy
      health:
        condition: service_healthy
      frontend:
        condition: service_healthy

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: ezunpaywall-elastic-dev
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_USERNAME={ELASTICSEARCH_USERNAME:-elastic}
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
    healthcheck:
      test: curl --cacert $CERTS_DIR_ES/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./data/elastic:/usr/share/elasticsearch/data"
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: ezunpaywall-kibana-dev
    environment:
      - ELASTICSEARCH_HOSTS="http://elastic:9200"
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
      - xpack.security.enabled=true
    depends_on: 
      elastic:
        condition: service_healthy
    ports:
      - 5601:5601
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -s --fail http://elastic:changeme@localhost:5601/api/status" ]
      interval: 10s
      timeout: 10s
      retries: 5
