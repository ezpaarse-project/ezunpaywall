version: "3.3"

services:
  graphql:
    build:
      context: ./services/graphql
    container_name: ezunpaywall-graphql-prod
    environment:
      - NODE_ENV=production
      - ACCESS_LOG_ROTATE
      # elastic
      - ELASTICSEARCH_HOSTS
      - ELASTICSEARCH_PORT
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      - ELASTICSEARCH_INDEX_ALIAS
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
    volumes:
      - ${GRAPHQL_APPLICATION_LOG_PATH:-./src/graphql/log/application}:/usr/src/app/log/application
      - ${GRAPHQL_ACCESS_LOG_PATH:-./src/graphql/log/access}:/usr/src/app/log/access
      - ${ELASTIC_CERT_CA_PATH:-./src/graphql/certs/ca.crt}:/usr/src/app/certs
    command: "npm start"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  update:
    build:
      context: ./services/update
      args:
        - http_proxy
        - https_proxy
    container_name: ezunpaywall-update-prod
    environment:
      - NODE_ENV=production
      - ACCESS_LOG_ROTATE
      # proxy
      - http_proxy
      - https_proxy
      # unpaywall
      - UNPAYWALL_APIKEY
      - UNPAYWALL_HOST=http://api.unpaywall.org
      # elastic
      - ELASTICSEARCH_HOSTS
      - ELASTICSEARCH_PORT
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      - ELASTICSEARCH_INDEX_ALIAS
      # cron
      - UPDATE_CRON_SCHEDULE
      - UPDATE_CRON_ACTIVE
      - UPDATE_CRON_INDEX
      - UPDATE_CRON_INTERVAL
      # password
      - UPDATE_APIKEY
    volumes:
      - ${UPDATE_APPLICATION_LOG_PATH:-./src/update/log/application}:/usr/src/app/log/application
      - ${UPDATE_ACCESS_LOG_PATH:-./src/update/log/access}:/usr/src/app/log/access
      - ${UPDATE_DATA_PATH:-./src/update/data}:/usr/src/app/data
      - ${ELASTIC_CERT_CA_PATH-./src/update/certs/ca.crt}:/usr/src/app/certs
    command: "npm start"
    restart: unless-stopped

  enrich:
    build:
      context: ./services/enrich
    container_name: ezunpaywall-enrich-prod
    environment:
      - NODE_ENV=production
      - ACCESS_LOG_ROTATE
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      # graphql
      - GRAPHQL_HOST
      - GRAPHQL_PORT
    volumes:
      - ${ENRICH_APPLICATION_LOG_PATH:-./src/enrich/log/application}:/usr/src/app/log/application
      - ${ENRICH_ACCESS_LOG_PATH:-./src/enrich/log/access}:/usr/src/app/log/access
      - ${ENRICH_DATA_PATH:-./src/enrich/data}:/usr/src/app/data
    command: "npm start"
    depends_on:
      redis:
        condition: service_healthy
      elastic:
        condition: service_healthy
    restart: unless-stopped

  apikey:
    build:
      context: ./services/apikey
    container_name: ezunpaywall-apikey-prod
    environment:
      - NODE_ENV=production
      - ACCESS_LOG_ROTATE
      # redis
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
    volumes:
      - ${APIKEY_APPLICATION_LOG_PATH:-./src/apikey/log/application}:/usr/src/app/log/application
      - ${APIKEY_ACCESS_LOG_PATH:-./src/apikey/log/access}:/usr/src/app/log/access
    command: "npm start"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    
  mail:
    build:
      context: ./services/mail
    container_name: ezunpaywall-mail-prod
    environment:
      - NODE_ENV=production
      - ACCESS_LOG_ROTATE
      # mail
      - NODE_CONFIG
      - MAIL_SMTP_HOST
      - MAIL_SMTP_PORT
      - MAIL_NOTIFICATIONS_SENDER
      - MAIL_NOTIFICATIONS_RECEIVERS
      - MAIL_NOTIFICATIONS_MACHINE
      # password
      - MAIL_APIKEY
    volumes:
      - ${MAIL_APPLICATION_LOG_PATH:-./src/mail/log/application}:/usr/src/app/log/application
      - ${MAIL_ACCESS_LOG_PATH:-./src/mail/log/access}:/usr/src/app/log/access
    command: "npm start"
    restart: unless-stopped

  frontend:
    build:
      context: ./services/frontend
    container_name: ezunpaywall-frontend-prod
    environment:
      - NODE_ENV=development
      - NUXT_PUBLIC_ENVIRONMENT=development
      - NUXT_PUBLIC_ELASTIC_ENV=development
      - NUXT_PUBLIC_VERSION=development
      - NUXT_PUBLIC_UNPAYWALL_HOMEPAGE_HOST
      - NUXT_PUBLIC_UNPAYWALL_API_HOST
      - NUXT_PUBLIC_UNPAYWALL_HOST
      - NUXT_PUBLIC_GRAPHQL_HOST=http://localhost/api
      - NUXT_PUBLIC_UPDATE_HOST=http://localhost/api/update
      - NUXT_PUBLIC_ENRICH_HOST=http://localhost/api/enrich
      - NUXT_PUBLIC_APIKEY_HOST=http://localhost/api/apikey
      - NUXT_MAIL_APIKEY
      - NUXT_MAIL_HOST="http://mail:3000"

  redis:
    image: redis:7.2.4-alpine3.19
    container_name: ezunpaywall-redis-prod
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - ${REDIS_DATA_PATH:-./data/redis}:/data
    restart: unless-stopped

  nginx:
    build:
      context: ./services/nginx
    container_name: ezunpaywall-nginx-prod
    environment:
      # host of service
      - NGINX_HOST
      - FRONTEND_HOST=http://frontend:3000/
      - GRAPHQL_HOST=http://graphql:3000/
      - UPDATE_HOST=http://update:3000/
      - ENRICH_HOST=http://enrich:3000/
      - APIKEY_HOST=http://apikey:3000/
      - MAIL_HOST=http://mail:3000/
      - HEALTH_HOST=http://health:3000/
    ports:
      - ${NGINX_PORT:-80}:80
    restart: unless-stopped
    depends_on:
      enrich:
        condition: service_healthy
      update:
        condition: service_healthy
      graphql:
        condition: service_healthy
      apikey:
        condition: service_healthy
      mail:
        condition: service_healthy
      frontend:
        condition: service_healthy

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: ezunpaywall-elastic-dev
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_USERNAME={ELASTICSEARCH_USERNAME:-elastic}
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./data/elastic:/usr/share/elasticsearch/data"
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --fail http://elastic:changeme@localhost:9200"
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: ezunpaywall-kibana-dev
    environment:
      - ELASTICSEARCH_HOSTS="http://elastic:9200"
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
      - xpack.security.enabled=true
    depends_on: 
      elastic:
        condition: service_healthy
    ports:
      - 5601:5601
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --fail http://elastic:changeme@localhost:5601/api/status"
        ]
      interval: 10s
      timeout: 10s
      retries: 5
