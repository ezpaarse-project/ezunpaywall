version: "3"

services:
  graphql:
    build:
      context: ./src/graphql
      args:
        - http_proxy
        - https_proxy
    environment:
      - NODE_ENV=production
      # elastic
      - ELASTICSEARCH_HOST
      - ELASTICSEARCH_PORT
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      # proxy
      - http_proxy
      - https_proxy
      # apikey
      - API_KEY_USERS
    volumes:
      - ./src/graphql/out:/usr/src/out/
    command: "npm start"
    ports:
      - 3000:3000
    restart: unless-stopped

  update:
    build:
      context: ./src/update
      args:
        - http_proxy
        - https_proxy
    environment:
      - NODE_ENV=production
      # mail
      - NODE_CONFIG
      - EZUNPAYWALL_SMTP_HOST
      - EZUNPAYWALL_SMTP_PORT
      - EZUNPAYWALL_NOTIFICATIONS_SENDER
      - EZUNPAYWALL_NOTIFICATIONS_RECEIVERS
       # unpaywall
      - API_KEY_UPW
      - UNPAYWALL_URL
      # elastic
      - ELASTICSEARCH_HOSTS
      - ELASTICSEARCH_PORT
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      # proxy
      - http_proxy
      - https_proxy
      # apikey
      - API_KEY_ADMIN
    volumes:
      - ./src/update/out:/usr/src/out/
    command: "npm start"
    ports:
      - 4000:4000
    restart: unless-stopped

  enrich:
    build:
      context: ./src/enrich
      args:
        - http_proxy
        - https_proxy
    environment:
      - NODE_ENV=production
      # elastic
      - ELASTICSEARCH_HOST
      - ELASTICSEARCH_PORT
      - ELASTICSEARCH_USERNAME
      - ELASTICSEARCH_PASSWORD
      # proxy
      - http_proxy
      - https_proxy
      # apikey
      - API_KEY_USERS
      # URL services
      - GRAPHQL_URL
    volumes:
      - ./src/enrich/out:/usr/src/out/
    command: "npm start"
    ports:
      - 5000:5000
    depends_on:
      - graphql
    restart: unless-stopped

  rp:
    build:
      context: .
      dockerfile: ./rp/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - GRAPHQL_URL
        - UPDATE_URL
        - ENRICH_URL  
    ports: 
      - 80:80
      - 443:443
    environment:
      - NGINX_HOST
    volumes:
      - "./rp/templates/default.conf.template:/etc/nginx/templates/default.conf.template:ro"
      - "./rp/ssl/:/etc/nginx/ssl:ro"